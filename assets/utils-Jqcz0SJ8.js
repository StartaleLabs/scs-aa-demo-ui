function s(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function c(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function i(t,...e){if(!c(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function h(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");s(t.outputLen),s(t.blockLen)}function g(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function w(t,e){i(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}const o=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function d(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function b(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function x(t,e){return t<<32-e|t>>>e}const m=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function a(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}function A(t){for(let e=0;e<t.length;e++)t[e]=a(t[e])}const l=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function E(t){i(t);let e="";for(let n=0;n<t.length;n++)e+=l[t[n]];return e}function y(t){if(typeof t!="string")throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array(new TextEncoder().encode(t))}function p(t){return typeof t=="string"&&(t=y(t)),i(t),t}function U(...t){let e=0;for(let r=0;r<t.length;r++){const f=t[r];i(f),e+=f.length}const n=new Uint8Array(e);for(let r=0,f=0;r<t.length;r++){const u=t[r];n.set(u,f),f+=u.length}return n}class B{clone(){return this._cloneInto()}}function L(t){const e=r=>t().update(p(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function T(t=32){if(o&&typeof o.getRandomValues=="function")return o.getRandomValues(new Uint8Array(t));if(o&&typeof o.randomBytes=="function")return o.randomBytes(t);throw new Error("crypto.getRandomValues must be defined")}export{B as H,g as a,E as b,b as c,w as d,s as e,A as f,i as g,h,m as i,T as j,U as k,x as r,p as t,d as u,L as w};
